{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"fs\"","webpack:///./node_modules/open/index.js","webpack:///./src/index.ts","webpack:///external \"util\"","webpack:///external \"path\"","webpack:///external \"child_process\"","webpack:///./node_modules/open/node_modules/is-wsl/index.js","webpack:///external \"os\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","promisify","path","childProcess","fs","isWsl","pAccess","access","pExecFile","execFile","localXdgOpenPath","join","__dirname","async","target","options","TypeError","command","wait","background","url","appArguments","cliArguments","childProcessOptions","Array","isArray","app","slice","encodeURI","process","platform","push","windowsVerbatimArguments","startsWith","windowsPath","stdout","trim","wslToWindowsPath","length","isBundled","exeLocalXdgOpen","constants","X_OK","_","versions","electron","stdio","detached","subprocess","spawn","Promise","resolve","reject","once","exitCode","Error","unref","console","log","open","os","release","toLowerCase","includes","readFileSync","env","__IS_WSL_TEST__"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = require(\"fs\");","'use strict';\nconst {promisify} = require('util');\nconst path = require('path');\nconst childProcess = require('child_process');\nconst fs = require('fs');\nconst isWsl = require('is-wsl');\n\nconst pAccess = promisify(fs.access);\nconst pExecFile = promisify(childProcess.execFile);\n\n// Path to included `xdg-open`.\nconst localXdgOpenPath = path.join(__dirname, 'xdg-open');\n\n// Convert a path from WSL format to Windows format:\n// `/mnt/c/Program Files/Example/MyApp.exe` → `C:\\Program Files\\Example\\MyApp.exe`\nconst wslToWindowsPath = async path => {\n\tconst {stdout} = await pExecFile('wslpath', ['-w', path]);\n\treturn stdout.trim();\n};\n\nmodule.exports = async (target, options) => {\n\tif (typeof target !== 'string') {\n\t\tthrow new TypeError('Expected a `target`');\n\t}\n\n\toptions = {\n\t\twait: false,\n\t\tbackground: false,\n\t\turl: false,\n\t\t...options\n\t};\n\n\tlet command;\n\tlet appArguments = [];\n\tconst cliArguments = [];\n\tconst childProcessOptions = {};\n\n\tif (Array.isArray(options.app)) {\n\t\tappArguments = options.app.slice(1);\n\t\toptions.app = options.app[0];\n\t}\n\n\t// Encodes the target as if it were an URL. Especially useful to get\n\t// double-quotes through the “double-quotes on Windows caveat”, but it\n\t// can be used on any platform.\n\tif (options.url) {\n\t\ttarget = encodeURI(target);\n\t}\n\n\tif (process.platform === 'darwin') {\n\t\tcommand = 'open';\n\n\t\tif (options.wait) {\n\t\t\tcliArguments.push('--wait-apps');\n\t\t}\n\n\t\tif (options.background) {\n\t\t\tcliArguments.push('--background');\n\t\t}\n\n\t\tif (options.app) {\n\t\t\tcliArguments.push('-a', options.app);\n\t\t}\n\t} else if (process.platform === 'win32' || isWsl) {\n\t\tcommand = 'cmd' + (isWsl ? '.exe' : '');\n\t\tcliArguments.push('/s', '/c', 'start', '\"\"', '/b');\n\n\t\t// Always quoting target allows for URLs/paths to have spaces and unmarked characters, as `cmd.exe` will\n\t\t// interpret them as plain text to be forwarded as one unique argument. Enabling `windowsVerbatimArguments`\n\t\t// disables Node.js's default quotes and escapes handling (https://git.io/fjdem).\n\t\t// References:\n\t\t// - Issues #17, #44, #55, #77, #101, #115\n\t\t// - Pull requests: #74, #98\n\t\t//\n\t\t// As a result, all double-quotes are stripped from the `target` and do not get to your desired destination.\n\t\ttarget = `\"${target}\"`;\n\t\tchildProcessOptions.windowsVerbatimArguments = true;\n\n\t\tif (options.wait) {\n\t\t\tcliArguments.push('/wait');\n\t\t}\n\n\t\tif (options.app) {\n\t\t\tif (isWsl && options.app.startsWith('/mnt/')) {\n\t\t\t\tconst windowsPath = await wslToWindowsPath(options.app);\n\t\t\t\t// eslint-disable-next-line require-atomic-updates\n\t\t\t\toptions.app = windowsPath;\n\t\t\t}\n\n\t\t\tcliArguments.push(options.app);\n\t\t}\n\n\t\tif (appArguments.length > 0) {\n\t\t\tcliArguments.push(...appArguments);\n\t\t}\n\t} else {\n\t\tif (options.app) {\n\t\t\tcommand = options.app;\n\t\t} else {\n\t\t\t// When bundled by Webpack, there's no actual package file path and no local `xdg-open`.\n\t\t\tconst isBundled = !__dirname || __dirname === '/';\n\n\t\t\t// Check if local `xdg-open` exists and is executable.\n\t\t\tlet exeLocalXdgOpen = false;\n\t\t\ttry {\n\t\t\t\tawait pAccess(localXdgOpenPath, fs.constants.X_OK);\n\t\t\t\texeLocalXdgOpen = true;\n\t\t\t} catch (_) {}\n\n\t\t\tconst useSystemXdgOpen = process.versions.electron ||\n\t\t\t\tprocess.platform === 'android' || isBundled || !exeLocalXdgOpen;\n\t\t\tcommand = useSystemXdgOpen ? 'xdg-open' : localXdgOpenPath;\n\t\t}\n\n\t\tif (appArguments.length > 0) {\n\t\t\tcliArguments.push(...appArguments);\n\t\t}\n\n\t\tif (!options.wait) {\n\t\t\t// `xdg-open` will block the process unless stdio is ignored\n\t\t\t// and it's detached from the parent even if it's unref'd.\n\t\t\tchildProcessOptions.stdio = 'ignore';\n\t\t\tchildProcessOptions.detached = true;\n\t\t}\n\t}\n\n\tcliArguments.push(target);\n\n\tif (process.platform === 'darwin' && appArguments.length > 0) {\n\t\tcliArguments.push('--args', ...appArguments);\n\t}\n\n\tconst subprocess = childProcess.spawn(command, cliArguments, childProcessOptions);\n\n\tif (options.wait) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsubprocess.once('error', reject);\n\n\t\t\tsubprocess.once('close', exitCode => {\n\t\t\t\tif (exitCode > 0) {\n\t\t\t\t\treject(new Error(`Exited with code ${exitCode}`));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresolve(subprocess);\n\t\t\t});\n\t\t});\n\t}\n\n\tsubprocess.unref();\n\n\treturn subprocess;\n};\n","console.log(\"Hello world!\");\n\nimport open from 'open';\n\n(async () => {\n    // Opens the image in the default image viewer and waits for the opened app to quit.\n    await open('/Users/loiccarbonne/workspace/perso/tbd/packages/tbd-electron-app/release/ProductName.app');\n})();\n\n","module.exports = require(\"util\");","module.exports = require(\"path\");","module.exports = require(\"child_process\");","'use strict';\nconst os = require('os');\nconst fs = require('fs');\n\nconst isWsl = () => {\n\tif (process.platform !== 'linux') {\n\t\treturn false;\n\t}\n\n\tif (os.release().toLowerCase().includes('microsoft')) {\n\t\treturn true;\n\t}\n\n\ttry {\n\t\treturn fs.readFileSync('/proc/version', 'utf8').toLowerCase().includes('microsoft');\n\t} catch (_) {\n\t\treturn false;\n\t}\n};\n\nif (process.env.__IS_WSL_TEST__) {\n\tmodule.exports = isWsl;\n} else {\n\tmodule.exports = isWsl();\n}\n","module.exports = require(\"os\");"],"sourceRoot":""}